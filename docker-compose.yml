services:
  finance-hub:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-finance-hub:latest
    build:
      dockerfile: docker/finance-hub/Dockerfile
    ports:
      - "8888:8888"
    environment:
      PORT: 8888
      SIRIUS_PUBLIC_URL: http://localhost:8080
      SIRIUS_URL: http://json-server:3000
      BACKEND_URL: http://finance-api:8080
      PREFIX: /finance
    healthcheck:
      test: wget -O /dev/null -S 'http://localhost:8888/finance/health-check' 2>&1 | grep 'HTTP/1.1 200 OK' || exit 1
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - json-server
      - finance-api

  finance-api:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-finance-api:latest
    build:
      dockerfile: docker/finance-api/Dockerfile
    ports:
      - "8181:8080"
    environment:
      - POSTGRES_CONN=sirius-db:5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=finance
    healthcheck:
      test: wget -O /dev/null -S 'http://localhost:8080/health-check' 2>&1 | grep 'HTTP/1.1 200 OK' || exit 1
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      sirius-db:
        condition: service_healthy

  json-server:
    build:
      dockerfile: json-server/Dockerfile
    ports:
      - '3000:3000'

  cypress:
    build:
      dockerfile: docker/cypress/Dockerfile
    command: [ "--headless", "-b", "electron" ]
    volumes:
      - ./cypress/screenshots:/root/cypress/screenshots:rw,delegated
      - ./cypress/logs:/root/cypress/logs:rw,delegated
    depends_on:
      finance-hub:
        condition: service_healthy

  go-lint:
    image: golangci/golangci-lint:v1.54.2
    working_dir: /go/src/app
    volumes:
      - ./:/go/src/app
      - ./.cache/golangci-lint/v1.53.3:/root/.cache
    command: golangci-lint run -v --timeout 5m

  trivy:
    image: aquasec/trivy:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.trivy-cache:/root/.cache
      - ./test-results:/test-results
      - ./.trivyignore:/.trivyignore

  yarn:
    image: node:22-alpine3.19
    working_dir: /home/node/app
    entrypoint: yarn
    volumes:
      - ./finance-hub:/home/node/app

  sirius-db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=finance
    ports:
      - "5431:5432"
    volumes:
      - ./migrations/1_baseline.sql:/docker-entrypoint-initdb.d/1_baseline.sql
      - ./test-data/seed_data.sql:/seed_data.sql
    healthcheck:
      test: pg_isready --username=user --dbname=finance
      interval: 5s
      timeout: 5s
      retries: 5

  sqlc-gen:
    image: kjconroy/sqlc
    working_dir: /src
    volumes:
      - ./finance-api/internal/store:/src
      - ./migrations:/schema
    command: generate

  sqlc-diff:
    image: kjconroy/sqlc
    working_dir: /src
    volumes:
      - ./finance-api/internal/store:/src
      - ./migrations:/schema
    command: diff

  sqlc-vet:
    image: kjconroy/sqlc
    environment:
      - POSTGRES_CONN=localhost:5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=finance
      - POSTGRES_SEARCH_PATH=supervision_finance
    working_dir: /src
    volumes:
      - ./finance-api/internal/store:/src
      - ./migrations:/schema
    command: vet
    depends_on:
      - finance-migration

  finance-migration:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-finance-migration:latest
    build:
      dockerfile: docker/finance-migration/Dockerfile
    depends_on:
      sirius-db:
        condition: service_healthy
    environment:
      DB_USER: user
      DB_PASSWORD: password
      DB_CONNECTION: sirius-db:5432
      DB_NAME: finance
      DB_SCHEMA: supervision_finance
    command: "up"
